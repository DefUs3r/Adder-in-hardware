$date
	Sun Aug  5 13:32:50 2018
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module RCA_test $end
$var wire 1 ! finalCarry $end
$var wire 4 " Sum [3:0] $end
$var reg 4 # A [3:0] $end
$var reg 4 $ B [3:0] $end
$var reg 1 % C $end
$scope module test $end
$var wire 4 & A [3:0] $end
$var wire 4 ' B [3:0] $end
$var wire 1 % C $end
$var wire 1 ! finalCarry $end
$var wire 4 ( Sum [3:0] $end
$var wire 5 ) Carry [4:0] $end
$scope begin loop[0] $end
$scope module fa1 $end
$var wire 1 * A $end
$var wire 1 + B $end
$var wire 1 , C_next $end
$var wire 1 - C_prev $end
$var wire 1 . tmpC $end
$var wire 1 / tmpS $end
$var wire 1 0 S $end
$scope module HA1 $end
$var wire 1 * A $end
$var wire 1 + B $end
$var wire 1 . carry $end
$var wire 1 / sum $end
$upscope $end
$scope module HA2 $end
$var wire 1 / A $end
$var wire 1 - B $end
$var wire 1 . carry $end
$var wire 1 0 sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin loop[1] $end
$scope module fa1 $end
$var wire 1 1 A $end
$var wire 1 2 B $end
$var wire 1 3 C_next $end
$var wire 1 4 C_prev $end
$var wire 1 5 tmpC $end
$var wire 1 6 tmpS $end
$var wire 1 7 S $end
$scope module HA1 $end
$var wire 1 1 A $end
$var wire 1 2 B $end
$var wire 1 5 carry $end
$var wire 1 6 sum $end
$upscope $end
$scope module HA2 $end
$var wire 1 6 A $end
$var wire 1 4 B $end
$var wire 1 5 carry $end
$var wire 1 7 sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin loop[2] $end
$scope module fa1 $end
$var wire 1 8 A $end
$var wire 1 9 B $end
$var wire 1 : C_next $end
$var wire 1 ; C_prev $end
$var wire 1 < tmpC $end
$var wire 1 = tmpS $end
$var wire 1 > S $end
$scope module HA1 $end
$var wire 1 8 A $end
$var wire 1 9 B $end
$var wire 1 < carry $end
$var wire 1 = sum $end
$upscope $end
$scope module HA2 $end
$var wire 1 = A $end
$var wire 1 ; B $end
$var wire 1 < carry $end
$var wire 1 > sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin loop[3] $end
$scope module fa1 $end
$var wire 1 ? A $end
$var wire 1 @ B $end
$var wire 1 A C_next $end
$var wire 1 B C_prev $end
$var wire 1 C tmpC $end
$var wire 1 D tmpS $end
$var wire 1 E S $end
$scope module HA1 $end
$var wire 1 ? A $end
$var wire 1 @ B $end
$var wire 1 C carry $end
$var wire 1 D sum $end
$upscope $end
$scope module HA2 $end
$var wire 1 D A $end
$var wire 1 B B $end
$var wire 1 C carry $end
$var wire 1 E sum $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0E
0D
0C
0B
0A
0@
0?
0>
0=
0<
0;
0:
09
08
07
06
05
04
03
02
01
00
0/
0.
0-
0,
0+
0*
b0 )
b0 (
b0 '
b0 &
0%
b0 $
b0 #
b0 "
0!
$end
#100
1>
1;
13
x5
14
1,
b100 "
b100 (
07
x.
16
1/
1-
12
1*
b111 )
1%
b10 $
b10 '
b1 #
b1 &
#200
0;
03
0E
17
05
0B
04
0:
0,
b110 "
b110 (
1>
0<
0.
1=
0/
0-
02
19
0*
11
b0 )
0%
b100 $
b100 '
b10 #
b10 &
#300
1;
13
07
x5
14
1,
1>
b1100 "
b1100 (
1E
x.
0=
1/
1D
1-
12
09
1*
01
1?
b111 )
1%
b10 $
b10 '
b1001 #
b1001 &
#400
0!
0;
0A
03
1E
0C
17
05
0B
04
0:
0,
1>
0<
b1111 "
b1111 (
10
0.
1=
0-
1+
0*
18
b0 )
0%
b11 $
b11 '
b1100 #
b1100 &
#510
